{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Sidebar from \"../Components/sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../Styles/Validation.module.css\";\nimport Swal from \"sweetalert2\";\nimport validationData from \"../Comparison/sample.json\";\nimport requirementData from \"../Comparison/min_requirements.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Validation = () => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [validationResults, setValidationResults] = useState({});\n  const [validatingNode, setValidatingNode] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [bmcFormVisible, setBmcFormVisible] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [bmcDetails, setBmcDetails] = useState({\n    ip: \"\",\n    username: \"\",\n    password: \"\"\n  });\n  const [scanResults, setScanResults] = useState([]);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const itemsPerPage = 4;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    selectedNodes\n  } = location.state || {\n    selectedNodes: []\n  };\n  useEffect(() => {\n    fetchScanResults();\n  }, []);\n  const fetchScanResults = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/scan\");\n      setScanResults(response.data);\n    } catch (error) {\n      console.error(\"Error fetching scan results:\", error);\n    }\n  };\n  const validateNode = node => {\n    setValidatingNode(node);\n    setCurrentNode(node);\n    setBmcDetails({\n      ...bmcDetails,\n      ip: node.ip\n    });\n    setBmcFormVisible(true);\n  };\n  const handleBack = () => {\n    navigate(-1);\n    setTimeout(() => {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    }, 100);\n  };\n  const handleCheckboxChange = (event, node) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows([...selectedRows, node]);\n    } else {\n      setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n    }\n  };\n\n  // const handleDeploy = () => {\n  //     navigate('/designatednode', { state: { selectedNodes: selectedRows } });\n  //     window.scrollTo({ top: 0, behavior: 'smooth' });\n  // };\n\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  const handleBmcFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/set_pxe_boot\", bmcDetails);\n      console.log(bmcDetails);\n\n      // Comparison logic\n      const comparisonResults = compareSpecs(validationData, requirementData);\n\n      // Determine overall status\n      const overallStatus = comparisonResults.cpuCoresPassed && comparisonResults.memoryPassed && comparisonResults.diskPassed && comparisonResults.nicPassed ? \"Passed\" : \"Failed\";\n\n      // Store results in validationResults\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [currentNode.ip]: {\n          status: overallStatus,\n          cpuCoresPassed: comparisonResults.cpuCoresPassed,\n          memoryPassed: comparisonResults.memoryPassed,\n          diskPassed: comparisonResults.diskPassed,\n          nicPassed: comparisonResults.nicPassed\n        }\n      }));\n      Swal.fire({\n        title: \"Success\",\n        text: \"Validation Done\",\n        confirmButtonText: \"OK\",\n        confirmButtonColor: \"#28a745\"\n      });\n      setBmcFormVisible(false);\n      setFormSubmitted(true);\n    } catch (error) {\n      console.error(\"Error setting PXE boot:\", error);\n      Swal.fire({\n        title: \"Failed\",\n        text: \"Failed to set PXE boot. Please try again.\",\n        confirmButtonText: \"OK\",\n        confirmButtonColor: \"#dc3545\"\n      });\n      setBmcFormVisible(false);\n      setFormSubmitted(true);\n    }\n  };\n  const handleCancel = () => {\n    setBmcFormVisible(false);\n    setValidatingNode(null);\n  };\n  const handleInfoButtonClick = () => {\n    // Check if the validation results exist for the current node\n    if (!validationResults || !currentNode || !validationResults[currentNode.ip]) {\n      Swal.fire({\n        title: \"Error\",\n        text: \"Validation not done or BMC details are incorrect. Please check and try again.\",\n        confirmButtonText: \"OK\",\n        confirmButtonColor: \"#dc3545\"\n      });\n      return;\n    }\n\n    // Get the current validation result for the node\n    const result = validationResults[currentNode.ip];\n\n    // Fetch min requirements and result values\n    const minCpuCores = requirementData.cpu_cores;\n    const minMemory = parseInt(requirementData.memory);\n    const minDiskCount = requirementData.disk_count; // Ensure this is a number\n    const minNic1GCount = requirementData.nic_1g_count; // Ensure this is a number\n\n    // Parse validation values\n    const validationCpuCores = parseInt(validationData.cpu_cores);\n    const validationMemory = parseInt(validationData.memory);\n    const validationDiskCount = parseInt(validationData.disk_count); // Convert to number\n    const validationNic1GCount = parseInt(validationData.nic_1g_count); // Convert to number\n\n    // Determine heading color based on status\n    const headingColor = result.cpuCoresPassed && result.memoryPassed && result.diskPassed && result.nicPassed ? \"#28a745\" : \"#dc3545\";\n\n    // Create HTML message with Min Req Value and Result Value\n    const msg = `\n        <h1 style=\"font-size: 1.5rem; font-weight: bold; margin-bottom: 20px; color: ${headingColor};\">\n            TEST RESULT: ${result.cpuCoresPassed && result.memoryPassed && result.diskPassed && result.nicPassed ? \"PASSED\" : \"FAILED\"}\n        </h1>\n        <div style=\"cursor: pointer; font-size: 1.1rem; color: #007bff; margin-bottom: 10px;\" id=\"toggleReport\">\n            Detailed Report <span id=\"arrow\" style=\"font-size: 1.1rem;\">▼</span>\n        </div>\n        <div id=\"reportWrapper\" style=\"max-height: 0; overflow: hidden; transition: max-height 0.3s ease;\">\n            <table style=\"width:100%; border-collapse: collapse; margin-top: 10px; border-radius: 10px; overflow: hidden;\">\n                <thead style=\"background-color: #f8f9fa;\">\n                    <tr>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">PARAMETER</th>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Min Req Value</th>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Result Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">CPU Cores</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minCpuCores}</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationCpuCores}</td>\n                    </tr>\n                    <tr style=\"background-color: #f8f9fa;\">\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">RAM</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minMemory} GB</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationMemory} GB</td>\n                    </tr>\n                    <tr>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">Disk Count</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minDiskCount}</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationDiskCount}</td>\n                    </tr>\n                    <tr style=\"background-color: #f8f9fa;\">\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">NIC Count</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minNic1GCount}</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationNic1GCount}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>`;\n\n    // Display the Swal modal\n    Swal.fire({\n      confirmButtonText: \"OK\",\n      confirmButtonColor: \"#17a2b8\",\n      html: msg,\n      didRender: () => {\n        const toggleButton = document.getElementById(\"toggleReport\");\n        const reportWrapper = document.getElementById(\"reportWrapper\");\n        const arrow = document.getElementById(\"arrow\");\n        toggleButton.addEventListener(\"click\", () => {\n          if (reportWrapper.style.maxHeight === \"0px\") {\n            reportWrapper.style.maxHeight = reportWrapper.scrollHeight + \"px\";\n            arrow.textContent = \"▲\"; // Change arrow to up arrow\n          } else {\n            reportWrapper.style.maxHeight = \"0px\";\n            arrow.textContent = \"▼\"; // Change arrow to down arrow\n          }\n        });\n      }\n    });\n  };\n  const compareSpecs = (validationData, requirementData) => {\n    const validationMemory = parseInt(validationData.memory.replace(\" Gi\", \"\"));\n    const validationCpuCores = parseInt(validationData.cpu_cores);\n    const validationDiskCount = parseInt(validationData.disk_count);\n    const validationNic1GCount = parseInt(validationData.nic_1g_count);\n    const minCpuCores = requirementData.cpu_cores;\n    const minMemory = parseInt(requirementData.memory.replace(\" Gi\", \"\"));\n    const minDiskCount = parseInt(requirementData.disk_count);\n    const minNic1GCount = requirementData.nic_1g_count;\n    return {\n      cpuCoresPassed: validationCpuCores >= minCpuCores,\n      memoryPassed: validationMemory >= minMemory,\n      diskPassed: validationDiskCount >= minDiskCount,\n      nicPassed: validationNic1GCount >= minNic1GCount\n    };\n  };\n  const handleDeployClick = ip => {\n    Swal.fire({\n      title: \"Management Network\",\n      width: \"60%\",\n      html: `\n                <div style=\"display: flex; justify-content: space-between; font-size: 1.2rem; padding: 10px; margin-top: 20px;\">\n             <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <div style=\"display: flex; align-items: center;\">\n            <span style=\"margin-left: 50px; font-weight: bold;\">IP/CIDR</span>\n        </div>\n        <div style=\"display: flex; align-items: center; margin-top: 10px;\">\n            <span style=\"margin-right: 5px; color: red;\">*</span>           \n            <span style=\"margin-right: 10px; font-weight: bold;\">OOB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n            <input type=\"text\" placeholder=\"Enter IP/CIDR\" \n                style=\"padding: 8px; border-radius: 5px; \n                       border: 1px solid #ccc; width: 120px;\">\n        </div>\n        <div style=\"display: flex; align-items: center; margin-top: 10px;\">\n            <span style=\"margin-right: 5px; color: red;\">*</span>           \n            <span style=\"margin-right: 5px; font-weight: bold; margin-left: 0;\">Mgmt IP</span>\n            <input type=\"text\" placeholder=\"Enter Mgmt IP\" \n                style=\"padding: 8px; border-radius: 5px; \n                       border: 1px solid #ccc; width: 120px;\">\n        </div>\n                <div style=\"display: flex; align-items: center; margin-top: 10px; margin-left: -150px;\">\n                    <span style=\"margin-right: 5px; color: red;\">*</span>           \n                    <span style=\"margin-right: 5px; font-weight: bold;\">VLAN&nbsp;&nbsp;</span>\n                </div>\n                        <div style=\"display: flex; align-items: center; margin-top: 10px; margin-left: 40px;\">\n    <span style=\"margin-right: 5px; color: red;\">*</span>           \n    <span style=\"margin-right: 5px; font-weight: bold; margin-left: 0;\">Provider NW</span>\n    <input type=\"text\" placeholder=\"Enter Gateway\" \n           style=\"padding: 8px; border-radius: 5px; \n                  border: 1px solid #ccc; width: 120px;\">\n</div>\n\n        <div style=\"margin-top: 10px;\"></div>\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">VLAN ID</span>\n        <input type=\"text\" placeholder=\"Enter VLAN ID\" \n            style=\"margin-top: 10px; padding: 8px; border-radius: 5px; \n                   border: 1px solid #ccc; width: 120px;\">\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">BOND</span>\n        <input type=\"checkbox\" style=\"margin-top: 19px; width: 16px; height: 16px;\">\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">INTERFACE</span>\n        <div style=\"margin-top: 10px; \">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 32px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n        <div style=\"margin-top: 10px;\">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 31.5px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n        <div style=\"margin-top: 10px;\">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 32px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n             </div>\n                </div>\n            `,\n      confirmButtonText: \"BOOT\",\n      confirmButtonColor: \"#28a745\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        // Trigger the next popup after clicking \"BOOT\"\n        Swal.fire({\n          title: \"Configuration\",\n          width: \"60%\",\n          html: `\n                        <div style=\"display: flex; justify-content: space-between; font-size: 1.2rem; padding: 10px; margin-top: 20px;\">\n             <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <div style=\"display: flex; align-items: center;\">\n            <span style=\"margin-left: 50px; font-weight: bold;\">IP/CIDR</span>\n        </div>\n        <div style=\"display: flex; align-items: center; margin-top: 10px;\">\n            <span style=\"margin-right: 5px; color: red;\">*</span>           \n            <span style=\"margin-right: 10px; font-weight: bold;\">IBN &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n            <input type=\"text\" placeholder=\"Enter IP/CIDR\" \n                style=\"padding: 8px; border-radius: 5px; \n                       border: 1px solid #ccc; width: 120px;\">\n        </div>\n        <div style=\"display: flex; align-items: center; margin-top: 10px;\">\n            <span style=\"margin-right: 5px; color: red;\">*</span>           \n            <span style=\"margin-right: 5px; font-weight: bold; margin-left: 0;\">Storage</span>\n            <input type=\"text\" placeholder=\"Enter Mgmt IP\" \n                style=\"padding: 8px; border-radius: 5px; \n                       border: 1px solid #ccc; width: 120px;\">\n        </div>\n                <div style=\"display: flex; align-items: center; margin-top: 10px; margin-left: -150px;\">\n                    <span style=\"margin-right: 5px; color: red;\">*</span>           \n                    <span style=\"margin-right: 5px; font-weight: bold;\">VLAN&nbsp;&nbsp;</span>\n                </div>\n                        <div style=\"display: flex; align-items: center; margin-top: 10px; margin-left: 40px;\">\n    <span style=\"margin-right: 5px; color: red;\">*</span>           \n    <span style=\"margin-right: 5px; font-weight: bold; margin-left: 0;\">Provider NW</span>\n    <input type=\"text\" placeholder=\"Enter Mgmt IP\" \n           style=\"padding: 8px; border-radius: 5px; \n                  border: 1px solid #ccc; width: 120px;\">\n</div>\n\n        <div style=\"margin-top: 10px;\"></div>\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">VLAN ID</span>\n        <input type=\"text\" placeholder=\"Enter VLAN ID\" \n            style=\"margin-top: 10px; padding: 8px; border-radius: 5px; \n                   border: 1px solid #ccc; width: 120px;\">\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">BOND</span>\n        <input type=\"checkbox\" style=\"margin-top: 19px; width: 16px; height: 16px;\">\n    </div>\n    \n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">INTERFACE</span>\n        <div style=\"margin-top: 10px; \">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 32px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n        <div style=\"margin-top: 10px;\">\n        \n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 31.5px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n        <div style=\"margin-top: 10px;\">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 32px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n             </div>\n                </div>\n                    `,\n          confirmButtonText: \"DEPLOY\",\n          confirmButtonColor: \"#28a745\"\n        });\n      }\n    });\n  };\n  const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"back-button\"],\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"data-table-container\"],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: styles[\"data-table\"],\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Sl No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"IP Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"DEPLOY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: selectedNodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: styles[\"no-device-message\"],\n                    children: /*#__PURE__*/_jsxDEV(\"center\", {\n                      children: \"No devices selected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 41\n                }, this) : paginatedNodes.map((node, index) => {\n                  var _validationResults$no;\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: (currentPage - 1) * itemsPerPage + index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: node.ip\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        disabled: validatingNode !== null && validatingNode.ip === node.ip,\n                        onClick: () => validateNode(node),\n                        children: validatingNode !== null && validatingNode.ip === node.ip ? \"Validated\" : \"Validate\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 499,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        color: \"red\",\n                        fontFamily: \"Arial, sans-serif\"\n                      },\n                      children: validationResults[node.ip] ? validationResults[node.ip].status : \"Not validated\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: validationResults[node.ip] || formSubmitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: handleInfoButtonClick,\n                        style: {\n                          backgroundColor: ((_validationResults$no = validationResults[node.ip]) === null || _validationResults$no === void 0 ? void 0 : _validationResults$no.status) === \"Passed\" ? \"#28a745\" : \"#dc3545\",\n                          // Green for 'Passed', Red for 'Failed'\n                          color: \"white\",\n                          // Text color to make it readable\n                          cursor: \"pointer\",\n                          // To indicate the button is clickable\n                          border: \"none\",\n                          // Optional: remove default border\n                          padding: \"8px 12px\",\n                          // Optional: for better button padding\n                          borderRadius: \"4px\" // Optional: to make the button corners rounded\n                        },\n                        children: \"Info\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 57\n                      }, this) : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: styles[\"deploy-column\"],\n                      children: validationResults[node.ip] && /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: styles[\"deploy-button\"],\n                        disabled: validationResults[node.ip].status !== \"Passed\" // Disable if not 'Passed'\n                        ,\n                        title: validationResults[node.ip].status !== \"Passed\" ? \"Sorry, you can't deploy!\" : undefined // Tooltip message when hovered\n                        ,\n                        style: {\n                          backgroundColor: validationResults[node.ip].status === \"Passed\" ? \"#28a745\" : \"#dc3545\",\n                          // Green for Passed, red for Failed\n                          color: \"white\",\n                          cursor: validationResults[node.ip].status === \"Passed\" ? \"pointer\" : \"not-allowed\"\n                        },\n                        onClick: () => handleDeployClick(node.ip) // Call handleDeployClick on button click\n                        ,\n                        children: \"Deploy\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 545,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 49\n                    }, this)]\n                  }, node.ip, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.pagination,\n              children: Array.from({\n                length: Math.ceil(selectedNodes.length / itemsPerPage)\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePageChange(i + 1),\n                className: styles[currentPage === i + 1 ? \"active\" : \"\"],\n                children: i + 1\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles[\"bmc-form\"]} ${bmcFormVisible ? styles.visible : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Enter BMC Details for \", currentNode === null || currentNode === void 0 ? void 0 : currentNode.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBmcFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.ip,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              ip: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.username,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              username: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: bmcDetails.password,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              password: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: styles[\"cancel-button\"],\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 9\n  }, this);\n};\n_s(Validation, \"q02fKuT3dv0U1NlGNpbR+PJvlXQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","Sidebar","FontAwesomeIcon","faArrowLeft","styles","Swal","validationData","requirementData","jsxDEV","_jsxDEV","Validation","_s","selectedRows","setSelectedRows","validationResults","setValidationResults","validatingNode","setValidatingNode","currentPage","setCurrentPage","bmcFormVisible","setBmcFormVisible","currentNode","setCurrentNode","bmcDetails","setBmcDetails","ip","username","password","scanResults","setScanResults","formSubmitted","setFormSubmitted","itemsPerPage","navigate","location","selectedNodes","state","fetchScanResults","response","get","data","error","console","validateNode","node","handleBack","setTimeout","window","scrollTo","top","behavior","handleCheckboxChange","event","isChecked","target","checked","filter","selectedRow","handlePageChange","newPage","handleBmcFormSubmit","preventDefault","post","log","comparisonResults","compareSpecs","overallStatus","cpuCoresPassed","memoryPassed","diskPassed","nicPassed","prevResults","status","fire","title","text","confirmButtonText","confirmButtonColor","handleCancel","handleInfoButtonClick","result","minCpuCores","cpu_cores","minMemory","parseInt","memory","minDiskCount","disk_count","minNic1GCount","nic_1g_count","validationCpuCores","validationMemory","validationDiskCount","validationNic1GCount","headingColor","msg","html","didRender","toggleButton","document","getElementById","reportWrapper","arrow","addEventListener","style","maxHeight","scrollHeight","textContent","replace","handleDeployClick","width","then","isConfirmed","paginatedNodes","slice","children","className","header","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","main","container","length","colSpan","map","index","_validationResults$no","disabled","color","fontFamily","backgroundColor","cursor","border","padding","borderRadius","undefined","pagination","Array","from","Math","ceil","_","i","visible","onSubmit","type","value","onChange","e","required","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Sidebar from \"../Components/sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../Styles/Validation.module.css\";\nimport Swal from \"sweetalert2\";\nimport validationData from \"../Comparison/sample.json\";\nimport requirementData from \"../Comparison/min_requirements.json\";\n\nconst Validation = () => {\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [validationResults, setValidationResults] = useState({});\n    const [validatingNode, setValidatingNode] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [bmcFormVisible, setBmcFormVisible] = useState(false);\n    const [currentNode, setCurrentNode] = useState(null);\n    const [bmcDetails, setBmcDetails] = useState({\n        ip: \"\",\n        username: \"\",\n        password: \"\",\n    });\n    const [scanResults, setScanResults] = useState([]);\n    const [formSubmitted, setFormSubmitted] = useState(false);\n\n    const itemsPerPage = 4;\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { selectedNodes } = location.state || { selectedNodes: [] };\n\n    useEffect(() => {\n        fetchScanResults();\n    }, []);\n\n    const fetchScanResults = async () => {\n        try {\n            const response = await axios.get(\"http://127.0.0.1:8000/scan\");\n            setScanResults(response.data);\n        } catch (error) {\n            console.error(\"Error fetching scan results:\", error);\n        }\n    };\n\n    const validateNode = (node) => {\n        setValidatingNode(node);\n        setCurrentNode(node);\n        setBmcDetails({ ...bmcDetails, ip: node.ip });\n        setBmcFormVisible(true);\n    };\n\n    const handleBack = () => {\n        navigate(-1);\n        setTimeout(() => {\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\n        }, 100);\n    };\n\n    const handleCheckboxChange = (event, node) => {\n        const isChecked = event.target.checked;\n        if (isChecked) {\n            setSelectedRows([...selectedRows, node]);\n        } else {\n            setSelectedRows(\n                selectedRows.filter((selectedRow) => selectedRow.ip !== node.ip)\n            );\n        }\n    };\n\n    // const handleDeploy = () => {\n    //     navigate('/designatednode', { state: { selectedNodes: selectedRows } });\n    //     window.scrollTo({ top: 0, behavior: 'smooth' });\n    // };\n\n    const handlePageChange = (newPage) => {\n        setCurrentPage(newPage);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n    };\n\n    const handleBmcFormSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const response = await axios.post(\n                \"http://127.0.0.1:8000/set_pxe_boot\",\n                bmcDetails\n            );\n            console.log(bmcDetails);\n\n            // Comparison logic\n            const comparisonResults = compareSpecs(validationData, requirementData);\n\n            // Determine overall status\n            const overallStatus =\n                comparisonResults.cpuCoresPassed &&\n                    comparisonResults.memoryPassed &&\n                    comparisonResults.diskPassed &&\n                    comparisonResults.nicPassed\n                    ? \"Passed\"\n                    : \"Failed\";\n\n            // Store results in validationResults\n            setValidationResults((prevResults) => ({\n                ...prevResults,\n                [currentNode.ip]: {\n                    status: overallStatus,\n                    cpuCoresPassed: comparisonResults.cpuCoresPassed,\n                    memoryPassed: comparisonResults.memoryPassed,\n                    diskPassed: comparisonResults.diskPassed,\n                    nicPassed: comparisonResults.nicPassed,\n                },\n            }));\n\n            Swal.fire({\n                title: \"Success\",\n                text: \"Validation Done\",\n                confirmButtonText: \"OK\",\n                confirmButtonColor: \"#28a745\",\n            });\n\n            setBmcFormVisible(false);\n            setFormSubmitted(true);\n        } catch (error) {\n            console.error(\"Error setting PXE boot:\", error);\n\n            Swal.fire({\n                title: \"Failed\",\n                text: \"Failed to set PXE boot. Please try again.\",\n                confirmButtonText: \"OK\",\n                confirmButtonColor: \"#dc3545\",\n            });\n\n            setBmcFormVisible(false);\n            setFormSubmitted(true);\n        }\n    };\n\n    const handleCancel = () => {\n        setBmcFormVisible(false);\n        setValidatingNode(null);\n    };\n    const handleInfoButtonClick = () => {\n        // Check if the validation results exist for the current node\n        if (\n            !validationResults ||\n            !currentNode ||\n            !validationResults[currentNode.ip]\n        ) {\n            Swal.fire({\n                title: \"Error\",\n                text: \"Validation not done or BMC details are incorrect. Please check and try again.\",\n                confirmButtonText: \"OK\",\n                confirmButtonColor: \"#dc3545\",\n            });\n            return;\n        }\n\n        // Get the current validation result for the node\n        const result = validationResults[currentNode.ip];\n\n        // Fetch min requirements and result values\n        const minCpuCores = requirementData.cpu_cores;\n        const minMemory = parseInt(requirementData.memory);\n        const minDiskCount = requirementData.disk_count; // Ensure this is a number\n        const minNic1GCount = requirementData.nic_1g_count; // Ensure this is a number\n\n        // Parse validation values\n        const validationCpuCores = parseInt(validationData.cpu_cores);\n        const validationMemory = parseInt(validationData.memory);\n        const validationDiskCount = parseInt(validationData.disk_count); // Convert to number\n        const validationNic1GCount = parseInt(validationData.nic_1g_count); // Convert to number\n\n        // Determine heading color based on status\n        const headingColor =\n            result.cpuCoresPassed &&\n                result.memoryPassed &&\n                result.diskPassed &&\n                result.nicPassed\n                ? \"#28a745\"\n                : \"#dc3545\";\n\n        // Create HTML message with Min Req Value and Result Value\n        const msg = `\n        <h1 style=\"font-size: 1.5rem; font-weight: bold; margin-bottom: 20px; color: ${headingColor};\">\n            TEST RESULT: ${result.cpuCoresPassed &&\n                result.memoryPassed &&\n                result.diskPassed &&\n                result.nicPassed\n                ? \"PASSED\"\n                : \"FAILED\"\n            }\n        </h1>\n        <div style=\"cursor: pointer; font-size: 1.1rem; color: #007bff; margin-bottom: 10px;\" id=\"toggleReport\">\n            Detailed Report <span id=\"arrow\" style=\"font-size: 1.1rem;\">▼</span>\n        </div>\n        <div id=\"reportWrapper\" style=\"max-height: 0; overflow: hidden; transition: max-height 0.3s ease;\">\n            <table style=\"width:100%; border-collapse: collapse; margin-top: 10px; border-radius: 10px; overflow: hidden;\">\n                <thead style=\"background-color: #f8f9fa;\">\n                    <tr>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">PARAMETER</th>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Min Req Value</th>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Result Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">CPU Cores</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minCpuCores}</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationCpuCores}</td>\n                    </tr>\n                    <tr style=\"background-color: #f8f9fa;\">\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">RAM</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minMemory} GB</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationMemory} GB</td>\n                    </tr>\n                    <tr>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">Disk Count</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minDiskCount}</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationDiskCount}</td>\n                    </tr>\n                    <tr style=\"background-color: #f8f9fa;\">\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">NIC Count</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minNic1GCount}</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationNic1GCount}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>`;\n\n        // Display the Swal modal\n        Swal.fire({\n            confirmButtonText: \"OK\",\n            confirmButtonColor: \"#17a2b8\",\n            html: msg,\n            didRender: () => {\n                const toggleButton = document.getElementById(\"toggleReport\");\n                const reportWrapper = document.getElementById(\"reportWrapper\");\n                const arrow = document.getElementById(\"arrow\");\n\n                toggleButton.addEventListener(\"click\", () => {\n                    if (reportWrapper.style.maxHeight === \"0px\") {\n                        reportWrapper.style.maxHeight = reportWrapper.scrollHeight + \"px\";\n                        arrow.textContent = \"▲\"; // Change arrow to up arrow\n                    } else {\n                        reportWrapper.style.maxHeight = \"0px\";\n                        arrow.textContent = \"▼\"; // Change arrow to down arrow\n                    }\n                });\n            },\n        });\n    };\n\n    const compareSpecs = (validationData, requirementData) => {\n        const validationMemory = parseInt(validationData.memory.replace(\" Gi\", \"\"));\n        const validationCpuCores = parseInt(validationData.cpu_cores);\n        const validationDiskCount = parseInt(validationData.disk_count);\n        const validationNic1GCount = parseInt(validationData.nic_1g_count);\n\n        const minCpuCores = requirementData.cpu_cores;\n        const minMemory = parseInt(requirementData.memory.replace(\" Gi\", \"\"));\n        const minDiskCount = parseInt(requirementData.disk_count);\n        const minNic1GCount = requirementData.nic_1g_count;\n\n        return {\n            cpuCoresPassed: validationCpuCores >= minCpuCores,\n            memoryPassed: validationMemory >= minMemory,\n            diskPassed: validationDiskCount >= minDiskCount,\n            nicPassed: validationNic1GCount >= minNic1GCount,\n        };\n    };\n    const handleDeployClick = (ip) => {\n        Swal.fire({\n            title: \"Management Network\",\n            width: \"60%\",\n            html: `\n                <div style=\"display: flex; justify-content: space-between; font-size: 1.2rem; padding: 10px; margin-top: 20px;\">\n             <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <div style=\"display: flex; align-items: center;\">\n            <span style=\"margin-left: 50px; font-weight: bold;\">IP/CIDR</span>\n        </div>\n        <div style=\"display: flex; align-items: center; margin-top: 10px;\">\n            <span style=\"margin-right: 5px; color: red;\">*</span>           \n            <span style=\"margin-right: 10px; font-weight: bold;\">OOB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n            <input type=\"text\" placeholder=\"Enter IP/CIDR\" \n                style=\"padding: 8px; border-radius: 5px; \n                       border: 1px solid #ccc; width: 120px;\">\n        </div>\n        <div style=\"display: flex; align-items: center; margin-top: 10px;\">\n            <span style=\"margin-right: 5px; color: red;\">*</span>           \n            <span style=\"margin-right: 5px; font-weight: bold; margin-left: 0;\">Mgmt IP</span>\n            <input type=\"text\" placeholder=\"Enter Mgmt IP\" \n                style=\"padding: 8px; border-radius: 5px; \n                       border: 1px solid #ccc; width: 120px;\">\n        </div>\n                <div style=\"display: flex; align-items: center; margin-top: 10px; margin-left: -150px;\">\n                    <span style=\"margin-right: 5px; color: red;\">*</span>           \n                    <span style=\"margin-right: 5px; font-weight: bold;\">VLAN&nbsp;&nbsp;</span>\n                </div>\n                        <div style=\"display: flex; align-items: center; margin-top: 10px; margin-left: 40px;\">\n    <span style=\"margin-right: 5px; color: red;\">*</span>           \n    <span style=\"margin-right: 5px; font-weight: bold; margin-left: 0;\">Provider NW</span>\n    <input type=\"text\" placeholder=\"Enter Gateway\" \n           style=\"padding: 8px; border-radius: 5px; \n                  border: 1px solid #ccc; width: 120px;\">\n</div>\n\n        <div style=\"margin-top: 10px;\"></div>\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">VLAN ID</span>\n        <input type=\"text\" placeholder=\"Enter VLAN ID\" \n            style=\"margin-top: 10px; padding: 8px; border-radius: 5px; \n                   border: 1px solid #ccc; width: 120px;\">\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">BOND</span>\n        <input type=\"checkbox\" style=\"margin-top: 19px; width: 16px; height: 16px;\">\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">INTERFACE</span>\n        <div style=\"margin-top: 10px; \">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 32px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n        <div style=\"margin-top: 10px;\">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 31.5px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n        <div style=\"margin-top: 10px;\">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 32px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n             </div>\n                </div>\n            `,\n            confirmButtonText: \"BOOT\",\n            confirmButtonColor: \"#28a745\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                // Trigger the next popup after clicking \"BOOT\"\n                Swal.fire({\n                    title: \"Configuration\",\n                    width: \"60%\",\n                    html: `\n                        <div style=\"display: flex; justify-content: space-between; font-size: 1.2rem; padding: 10px; margin-top: 20px;\">\n             <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <div style=\"display: flex; align-items: center;\">\n            <span style=\"margin-left: 50px; font-weight: bold;\">IP/CIDR</span>\n        </div>\n        <div style=\"display: flex; align-items: center; margin-top: 10px;\">\n            <span style=\"margin-right: 5px; color: red;\">*</span>           \n            <span style=\"margin-right: 10px; font-weight: bold;\">IBN &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n            <input type=\"text\" placeholder=\"Enter IP/CIDR\" \n                style=\"padding: 8px; border-radius: 5px; \n                       border: 1px solid #ccc; width: 120px;\">\n        </div>\n        <div style=\"display: flex; align-items: center; margin-top: 10px;\">\n            <span style=\"margin-right: 5px; color: red;\">*</span>           \n            <span style=\"margin-right: 5px; font-weight: bold; margin-left: 0;\">Storage</span>\n            <input type=\"text\" placeholder=\"Enter Mgmt IP\" \n                style=\"padding: 8px; border-radius: 5px; \n                       border: 1px solid #ccc; width: 120px;\">\n        </div>\n                <div style=\"display: flex; align-items: center; margin-top: 10px; margin-left: -150px;\">\n                    <span style=\"margin-right: 5px; color: red;\">*</span>           \n                    <span style=\"margin-right: 5px; font-weight: bold;\">VLAN&nbsp;&nbsp;</span>\n                </div>\n                        <div style=\"display: flex; align-items: center; margin-top: 10px; margin-left: 40px;\">\n    <span style=\"margin-right: 5px; color: red;\">*</span>           \n    <span style=\"margin-right: 5px; font-weight: bold; margin-left: 0;\">Provider NW</span>\n    <input type=\"text\" placeholder=\"Enter Mgmt IP\" \n           style=\"padding: 8px; border-radius: 5px; \n                  border: 1px solid #ccc; width: 120px;\">\n</div>\n\n        <div style=\"margin-top: 10px;\"></div>\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">VLAN ID</span>\n        <input type=\"text\" placeholder=\"Enter VLAN ID\" \n            style=\"margin-top: 10px; padding: 8px; border-radius: 5px; \n                   border: 1px solid #ccc; width: 120px;\">\n    </div>\n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">BOND</span>\n        <input type=\"checkbox\" style=\"margin-top: 19px; width: 16px; height: 16px;\">\n    </div>\n    \n    <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        <span style=\"font-weight: bold;\">INTERFACE</span>\n        <div style=\"margin-top: 10px; \">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 32px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n        <div style=\"margin-top: 10px;\">\n        \n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 31.5px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n        <div style=\"margin-top: 10px;\">\n            <select style=\"padding: 8px; border-radius: 5px; \n                           border: 1px solid #ccc; width: 120px; font-size: 0.8rem; height: 32px\">\n                <option value=\"\" disabled selected>Select</option>\n                <option value=\"eth0\">eth0</option>\n                <option value=\"eth1\">eth1</option>\n                <option value=\"wlan0\">wlan0</option>\n                <option value=\"lo\">(lo)</option>\n                <option value=\"docker0\">docker0</option>\n            </select>\n        </div>\n             </div>\n                </div>\n                    `,\n                    confirmButtonText: \"DEPLOY\",\n                    confirmButtonColor: \"#28a745\",\n                });\n            }\n        });\n    };\n\n    const paginatedNodes = selectedNodes.slice(\n        (currentPage - 1) * itemsPerPage,\n        currentPage * itemsPerPage\n    );\n\n    return (\n        <div>\n            <div className={styles.header}>\n                <button className={styles[\"back-button\"]} onClick={handleBack}>\n                    <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n                </button>\n                <center>\n                    <h1>Validation</h1>\n                </center>\n            </div>\n            <div className={styles.main}>\n                <div className={styles[\"data-table-container\"]}>\n                    <div className={styles.container}>\n                        <div>\n                            <table className={styles[\"data-table\"]}>\n                                <thead>\n                                    <tr>\n                                        <th>Sl No.</th>\n                                        <th>IP Address</th>\n                                        <th>Validate</th>\n                                        <th>Status</th>\n                                        <th>Result</th>\n                                        <th>DEPLOY</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {selectedNodes.length === 0 ? (\n                                        <tr>\n                                            <td colSpan=\"6\" className={styles[\"no-device-message\"]}>\n                                                <center>No devices selected</center>\n                                            </td>\n                                        </tr>\n                                    ) : (\n                                        paginatedNodes.map((node, index) => (\n                                            <tr key={node.ip}>\n                                                <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\n                                                <td>{node.ip}</td>\n                                                <td>\n                                                    <button\n                                                        disabled={\n                                                            validatingNode !== null &&\n                                                            validatingNode.ip === node.ip\n                                                        }\n                                                        onClick={() => validateNode(node)}\n                                                    >\n                                                        {validatingNode !== null &&\n                                                            validatingNode.ip === node.ip\n                                                            ? \"Validated\"\n                                                            : \"Validate\"}\n                                                    </button>\n                                                </td>\n                                                <td\n                                                    style={{\n                                                        color: \"red\",\n                                                        fontFamily: \"Arial, sans-serif\",\n                                                    }}\n                                                >\n                                                    {validationResults[node.ip]\n                                                        ? validationResults[node.ip].status\n                                                        : \"Not validated\"}\n                                                </td>\n                                                <td>\n                                                    {validationResults[node.ip] || formSubmitted ? (\n                                                        <button\n                                                            onClick={handleInfoButtonClick}\n                                                            style={{\n                                                                backgroundColor:\n                                                                    validationResults[node.ip]?.status ===\n                                                                        \"Passed\"\n                                                                        ? \"#28a745\"\n                                                                        : \"#dc3545\", // Green for 'Passed', Red for 'Failed'\n                                                                color: \"white\", // Text color to make it readable\n                                                                cursor: \"pointer\", // To indicate the button is clickable\n                                                                border: \"none\", // Optional: remove default border\n                                                                padding: \"8px 12px\", // Optional: for better button padding\n                                                                borderRadius: \"4px\", // Optional: to make the button corners rounded\n                                                            }}\n                                                        >\n                                                            Info\n                                                        </button>\n                                                    ) : null}\n                                                </td>\n                                                <td className={styles[\"deploy-column\"]}>\n                                                    {validationResults[node.ip] && (\n                                                        <button\n                                                            className={styles[\"deploy-button\"]}\n                                                            disabled={\n                                                                validationResults[node.ip].status !== \"Passed\"\n                                                            } // Disable if not 'Passed'\n                                                            title={\n                                                                validationResults[node.ip].status !== \"Passed\"\n                                                                    ? \"Sorry, you can't deploy!\"\n                                                                    : undefined\n                                                            } // Tooltip message when hovered\n                                                            style={{\n                                                                backgroundColor:\n                                                                    validationResults[node.ip].status === \"Passed\"\n                                                                        ? \"#28a745\"\n                                                                        : \"#dc3545\", // Green for Passed, red for Failed\n                                                                color: \"white\",\n                                                                cursor:\n                                                                    validationResults[node.ip].status === \"Passed\"\n                                                                        ? \"pointer\"\n                                                                        : \"not-allowed\",\n                                                            }}\n                                                            onClick={() => handleDeployClick(node.ip)} // Call handleDeployClick on button click\n                                                        >\n                                                            Deploy\n                                                        </button>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ))\n                                    )}\n                                </tbody>\n                            </table>\n\n                            <div className={styles.pagination}>\n                                {Array.from(\n                                    { length: Math.ceil(selectedNodes.length / itemsPerPage) },\n                                    (_, i) => (\n                                        <button\n                                            key={i}\n                                            onClick={() => handlePageChange(i + 1)}\n                                            className={styles[currentPage === i + 1 ? \"active\" : \"\"]}\n                                        >\n                                            {i + 1}\n                                        </button>\n                                    )\n                                )}\n                            </div>\n                            {/* <button\n                                className=\"next-button\"\n                                onClick={handleDeploy}\n                                disabled={selectedRows.length === 0}\n                            >\n                                <strong>Next</strong>\n                            </button> */}\n                        </div>\n                        <Sidebar />\n                    </div>\n                </div>\n            </div>\n\n            {/* BMC Form */}\n            <div\n                className={`${styles[\"bmc-form\"]} ${bmcFormVisible ? styles.visible : \"\"\n                    }`}\n            >\n                <h2>\n                    <strong>Enter BMC Details for {currentNode?.ip}</strong>\n                </h2>\n                <form onSubmit={handleBmcFormSubmit}>\n                    <label>\n                        BMC IP Address:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.ip}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, ip: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Username:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.username}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, username: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Password:\n                        <input\n                            type=\"password\"\n                            value={bmcDetails.password}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, password: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <div>\n                        <button type=\"submit\">Submit</button>\n                        <button\n                            type=\"button\"\n                            className={styles[\"cancel-button\"]}\n                            onClick={handleCancel}\n                        >\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Validation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}